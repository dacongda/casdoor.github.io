"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[8561],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,u=d["".concat(s,".").concat(m)]||d[m]||g[m]||n;return r?a.createElement(u,i(i({ref:t},c),{},{components:r})):a.createElement(u,i({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<n;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},64400:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var a=r(87462),o=(r(67294),r(3905));const n={title:"Generating Swagger Files",description:"Generating Swagger Files",keywords:["bee","swagger"],authors:["ComradeProgrammer"]},i=void 0,l={unversionedId:"developer-guide/swagger",id:"developer-guide/swagger",title:"Generating Swagger Files",description:"Generating Swagger Files",source:"@site/docs/developer-guide/swagger.md",sourceDirName:"developer-guide",slug:"/developer-guide/swagger",permalink:"/es/docs/developer-guide/swagger",draft:!1,editUrl:"https://github.com/casdoor/casdoor-website/edit/master/docs/developer-guide/swagger.md",tags:[],version:"current",frontMatter:{title:"Generating Swagger Files",description:"Generating Swagger Files",keywords:["bee","swagger"],authors:["ComradeProgrammer"]},sidebar:"tutorialSidebar",previous:{title:"Frontend",permalink:"/es/docs/developer-guide/frontend"},next:{title:"Organizations",permalink:"/es/docs/category/organizations"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"How to write the comment",id:"how-to-write-the-comment",level:2},{value:"How to generate the swagger file",id:"how-to-generate-the-swagger-file",level:2}],c={toc:p};function g(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,'As we know, the beego framework provides support for generating swagger files to clarify the API via the command line tool called "bee". Casdoor is also built based on beego. However, we found that the swagger files generated by bee failed to categorize the APIs with the "@Tag" label. So, we modified the original bee to implement this function.'),(0,o.kt)("h2",{id:"how-to-write-the-comment"},"How to write the comment"),(0,o.kt)("p",null,'Most rules are exactly identical to the original bee comment formats. The only discrepancy is that the API shall be divided into different groups according to the "@Tag" label. Therefore, developers are obliged to ensure that this tag is correctly added. Here is an example:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// @Title Login\n// @Tag Login API\n// @Description login\n// @Param   oAuthParams     query    string  true        "oAuth parameters"\n// @Param   body    body   RequestForm  true        "Login information"\n// @Success 200 {object} controllers.api_controller.Response The Response object\n// @router /login [post]\nfunc (c *ApiController) Login() {\n')),(0,o.kt)("p",null,'APIs with the same "@Tag" labels will be put into the same group.'),(0,o.kt)("h2",{id:"how-to-generate-the-swagger-file"},"How to generate the swagger file"),(0,o.kt)("ol",{start:0},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Write comments for the API in the correct format.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Fetch this repository: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/bee"},"https://github.com/casbin/bee"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Build the modified bee. For example, in the root directory of casbin/bee, run the following command:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"go build -o mybee .\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Copy mybee to the base directory of casdoor.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In that directory, run the following command:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mybee generate docs\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"(Optional) If you want to generate swagger document for specific tags or apis, here are some example commands:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'mybee generate docs --tags "Adapter API"\nmybee generate docs --tags "Adapter API,Login API"\nmybee generate docs --apis "add-adapter"\nmybee generate docs --apis "add-adapter,delete-adapter"\n')),(0,o.kt)("p",{parentName:"li"},"Notably: We only accept a comma ",(0,o.kt)("inlineCode",{parentName:"p"},",")," as the separator when multiple tags/apis provided."))),(0,o.kt)("p",null,"Then you will find that the new swagger files are generated."))}g.isMDXComponent=!0}}]);