"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[8411],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return t?o.createElement(f,s(s({ref:n},p),{},{components:t})):o.createElement(f,s({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<a;c++)s[c]=t[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},81333:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=t(87462),r=(t(67294),t(3905));const a={title:"Deploying to Kubernetes",description:"Learn how to deploy Casdoor in a Kubernetes cluster",keywords:["k8s","Kubernetes","Casdoor","deployment"],authors:["ComradeProgrammer"]},s=void 0,i={unversionedId:"deployment/k8s",id:"deployment/k8s",title:"Deploying to Kubernetes",description:"Learn how to deploy Casdoor in a Kubernetes cluster",source:"@site/docs/deployment/k8s.md",sourceDirName:"deployment",slug:"/deployment/k8s",permalink:"/fr/docs/deployment/k8s",draft:!1,editUrl:"https://github.com/casdoor/casdoor-website/edit/master/docs/deployment/k8s.md",tags:[],version:"current",frontMatter:{title:"Deploying to Kubernetes",description:"Learn how to deploy Casdoor in a Kubernetes cluster",keywords:["k8s","Kubernetes","Casdoor","deployment"],authors:["ComradeProgrammer"]},sidebar:"tutorialSidebar",previous:{title:"Deploying to NGINX",permalink:"/fr/docs/deployment/nginx"},next:{title:"Data Initialization",permalink:"/fr/docs/deployment/data-initialization"}},l={},c=[{value:"Deploy Casdoor in Kubernetes (k8s)",id:"deploy-casdoor-in-kubernetes-k8s",level:2}],p={toc:c};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"deploy-casdoor-in-kubernetes-k8s"},"Deploy Casdoor in Kubernetes (k8s)"),(0,r.kt)("p",null,'We provide a basic example of deploying Casdoor in a Kubernetes cluster. In the root folder of Casdoor, you will find a file named "k8s.yaml". This file contains an example configuration for deploying Casdoor in Kubernetes, including a deployment and a service.'),(0,r.kt)("p",null,"Before starting the deployment, ensure that you have modified the ",(0,r.kt)("inlineCode",{parentName:"p"},"conf/app.conf")," file so that Casdoor can connect to the database successfully and that the database itself is running. Also, make sure that Kubernetes is able to pull the necessary images."),(0,r.kt)("p",null,"To deploy Casdoor, run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s.yaml\n")),(0,r.kt)("p",null,"You can check the deployment status by running the command ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl get pods"),"."),(0,r.kt)("p",null,"Here is the content of ",(0,r.kt)("inlineCode",{parentName:"p"},"k8s.yaml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# this is only an EXAMPLE of deploying casddor in kubernetes\n# please modify this file according to your requirements\napiVersion: v1\nkind: Service\nmetadata:\n  #EDIT IT: if you don't want to run casdoor in default namespace, please modify this field\n  #namespace: casdoor\n  name: casdoor-svc\n  labels:\n    app: casdoor\nspec:\n  #EDIT IT: if you don't want to run casdoor in default namespace, please modify this filed\n  type: NodePort\n  ports:\n    - port: 8000\n  selector:\n    app: casdoor\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  #EDIT IT: if you don't want to run casdoor in default namespace, please modify this field\n  #namespace: casdoor\n  name: casdoor-deployment\n  labels:\n    app: casdoor\nspec:\n  #EDIT IT: if you don't use redis, casdoor should not have multiple replicas\n  replicas: 1\n  selector:\n    matchLabels:\n      app: casdoor\n  template:\n    metadata:\n      labels:\n        app: casdoor\n    spec:\n      containers:\n        - name: casdoor-container\n          image: casbin/casdoor:latest\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8000\n          volumeMounts:\n            # the mounted directory path in THE CONTAINER\n            - mountPath: /conf\n              name: conf\n          env:       \n            - name: RUNNING_IN_DOCKER\n              value: \"true\"\n      #if you want to deploy this in real prod env, consider the config map\n      volumes:\n        - name: conf\n          hostPath:\n            #EDIT IT: the mounted directory path in THE HOST\n            path: /conf\n\n")),(0,r.kt)("p",null,"Please note that this file is only an example. You can make various modifications as per your requirements, such as using a different namespace, service type, or a ConfigMap to mount the configuration file. Using a ConfigMap is a recommended approach in Kubernetes for mounting configuration files in a production environment."))}d.isMDXComponent=!0}}]);